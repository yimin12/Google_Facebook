ThreadPool

所谓线程池，通俗的理解就是有一个池子，里面存放着已经创建好的线程，当有任务提
交给线程池执行时，池子中的某个线程会主动执行该任务。如果池子中的线程数量不够应付
数量众多的任务时，则需要自动扩充新的线程到池子中，但是该数量是有限的，就好比池塘
的水界线一样。当任务比较少的时候，池子中的线程能够自动回收，释放资源。为了能够异
步地提交任务和缓存未被处理的任务，需要有一个任务队列

任务队列：用于缓存提交的任务。
 线程数量管理功能：一个线程池必须能够很好地管理和控制线程数量，可通过如下三个
参数来实现，比如创建线程池时初始的线程数量init；线程池自动扩充时最大的线程
数量max；在线程池空闲时需要释放线程但是也要维护一定数量的活跃数量或者核心数
量core。有了这三个参数，就能够很好地控制线程池中的线程数量，将其维护在一个
合理的范围之内，三者之间的关系是init<=core<=max。
 任务拒绝策略：如果线程数量已达到上限且任务队列已满，则需要有相应的拒绝策略来
通知任务提交者。
 线程工厂：主要用于个性化定制线程，比如将线程设置为守护线程以及设置线程名称等。
 QueueSize：任务队列主要存放提交的Runnable，但是为了防止内存溢出，需要有
limit 数量对其进行控制。
 Keepedalive 时间：该时间主要决定线程各个重要参数自动维护的时间间隔